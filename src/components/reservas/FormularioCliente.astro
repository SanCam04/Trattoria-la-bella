---
const { mostrar } = Astro.props;
---

<div
  id="modalCliente"
  class="hidden fixed inset-0 bg-black/50 backdrop-blur-sm flex items-center justify-center z-50"
>
  <div
    class="bg-white rounded-xl p-6 w-full max-w-2xl grid grid-cols-1 md:grid-cols-2 gap-6 text-center relative animate-fade-in"
  >
    <!-- Resumen -->
    <div class="bg-gray-100 rounded-xl p-4">
      <h3 class="text-lg font-semibold text-[#4e563f] mb-3">Tu Reserva</h3>
      <ul class="text-left text-sm space-y-2">
        <li><strong>Personas:</strong> <span id="resumenPersonas">-</span></li>
        <li><strong>Fecha:</strong> <span id="resumenFecha">-</span></li>
        <li><strong>Hora:</strong> <span id="resumenHora">-</span></li>
      </ul>
    </div>

    <!-- Formulario cliente -->
    <div>
      <h2 class="text-2xl mb-4 text-[#4e563f]">Datos del Cliente</h2>

      <form id="formularioCliente" class="grid gap-4 text-left">
        <div>
          <label class="text-sm">Nombre completo</label>
          <input
            type="text"
            name="nombre"
            required
            class="w-full px-4 py-2 border border-gray-300 rounded-lg focus:outline-none focus:ring-2 focus:ring-[#e9d8a6]"
          />
        </div>

        <div>
          <label class="text-sm">Teléfono</label>
          <input
            type="tel"
            name="telefono"
            required
            class="w-full px-4 py-2 border border-gray-300 rounded-lg focus:outline-none focus:ring-2 focus:ring-[#e9d8a6]"
          />
        </div>

        <div>
          <label class="text-sm">Email</label>
          <input
            type="email"
            name="email"
            required
            class="w-full px-4 py-2 border border-gray-300 rounded-lg focus:outline-none focus:ring-2 focus:ring-[#e9d8a6]"
          />
        </div>

        <div>
          <label class="text-sm">Cédula</label>
          <input
            type="text"
            name="cedula"
            required
            class="w-full px-4 py-2 border border-gray-300 rounded-lg focus:outline-none focus:ring-2 focus:ring-[#e9d8a6]"
          />
        </div>

        <div class="flex justify-between items-center mt-4">
          <button
            type="button"
            id="cerrarFormulario"
            class="text-sm text-red-500 hover:underline"
          >
            Cancelar
          </button>
        </div>

        <button
          type="submit"
          class="mt-4 bg-[#e9d8a6] text-black px-6 py-2 rounded hover:bg-[#4e563f] hover:text-white transition"
        >
          Enviar
        </button>
      </form>
    </div>
  </div>

  <script is:inline>
    window.addEventListener("DOMContentLoaded", () => {
      const cerrarBtn = document.getElementById("cerrarFormulario");
      const modal = document.getElementById("modalCliente");
      const formulario = document.getElementById("formularioCliente");

      let cuentaRegresiva;

      function cerrarModal() {
        modal.classList.add("hidden");
        modal.classList.remove("flex");
        if (cuentaRegresiva) clearInterval(cuentaRegresiva);
      }

      cerrarBtn?.addEventListener("click", cerrarModal);

      // Mostrar resumen en modal
      const resumenPersonas = document.getElementById("resumenPersonas");
      const resumenFecha = document.getElementById("resumenFecha");
      const resumenHora = document.getElementById("resumenHora");

      const reserva = window.datosReserva || {};
      if (resumenPersonas && resumenFecha && resumenHora) {
        resumenPersonas.textContent = reserva.personas ?? "-";
        resumenFecha.textContent = reserva.fecha ?? "-";
        resumenHora.textContent = reserva.hora ?? "-";
      }

      // Envío del formulario completo
      formulario?.addEventListener("submit", async (e) => {
        e.preventDefault();
        clearInterval(cuentaRegresiva);

        const formData = new FormData(formulario);
        const cliente = {
          nombre: formData.get("nombre"),
          telefono: formData.get("telefono"),
          email: formData.get("email"),
          cedula: formData.get("cedula"),
        };

        const reserva = window.datosReserva || {};

        // Combinar fecha y hora en formato UTC ISO y renombrar como "fecha"
        const fechaUTC = new Date(
          `${reserva.fecha}T${reserva.hora}`
        ).toISOString();

        const datosCompletos = {
          ...cliente,
          personas: reserva.personas,
          fecha: fechaUTC, // ✅ renombrado, ya no se llama fecha_utc ni se separa la hora
        };

        console.log(
          "✅ Simulación de envío de datos al backend:",
          datosCompletos
        );

        // Simulación sin backend:
        alert("✅ Reserva generada correctamente. Revisa la consola.");
        cerrarModal(); // Asegúrate que cerrarModal esté definido en este mismo script
      });
    });
  </script>
</div>
